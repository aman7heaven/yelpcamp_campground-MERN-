<% layout('layouts/boilerplate.ejs') %> 
<link rel="stylesheet" href="/stylesheets/stars.css">


<div class="row">
    <div class="col-6">
      
      <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel" data-bs-interval="false">
        <div class="carousel-inner">

            <% for(let img of campground.images) { %>
              <%  let idx = campground.images.indexOf(img); %> 
              <div class="carousel-item <%= idx === 0 ? 'active' : ''%>">
                <img src="<%= img.url%>" class="d-block w-100" alt="" >
              </div>
             <% } %>
      
        </div>
        <% if(campground.images.length > 1) {%> 
        <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Previous</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="visually-hidden">Next</span>
        </button>
        <% } %> 
      </div>

<div class="card mb-3">
    <div class="card-body">
      <h5 class="card-title"><%=campground.title%></h5>
      <p class="card-text"><%=campground.description%>
    <ul class="list-group list-group-flush">
      <li class="list-group-item text-muted"><%=campground.location%></li>
      <li class="list-group-item">Submitted by -<%=campground.author.username%></li>
      <li class="list-group-item">$<%=campground.price%>/night</li>
    </ul>
    <% if(currentUser && campground.author.equals(currentUser._id)) {%> 
    <div class="card-body">
        <a class="card-link btn btn-primary" href="/campgrounds/<%=campground._id%>/edit">Edit</a>
        <form class="d-inline" action="/campgrounds/<%=campground._id%>?_method=DELETE" method="POST">
        
            <button class="btn btn-danger">Delete</button>

        </form>
    </div>
    <% } %> 
  <div class="card-footer text-muted">
     2 days ago
</div>
</div>

 </div>
    </div>

    <div class="col-6">
      <div id='map' style='width:100%; height: 300px;'></div>
      <% if(currentUser) {%> 
      <h3>Leave a Review</h3>
      <form class="mb-3 validated-form" action="/campgrounds/<%=campground._id %>/reviews" method="POST" novalidate>
        <div class="mb-3">
          <label class="form-label" for="rating">Rating</label>
          <input type="range" class="form-range" min="1" max= "5" name="review[rating]" id="rating">
        </div>
        

        <div class="b-3">
          <label class="form-label" for="body">Review</label>
          <textarea class="form-control" name="review[body]" id="body" cols="30" rows="3" required></textarea>
          <div class="valid-feedback">
            Looks good!
          </div>
        </div>
        <button class="btn btn-success">Submit</button>
      </form>
      <% } %> 
      <% for(let review of campground.reviews){ %> 
        <div class="card mb-3">
      
      <div class="card-body">
        <!-- <h5 class="card-title">Rating: <%=review.rating%> </h5> -->
        <p class="starability-result" data-rating="<%=review.rating%>">
          Rated: <%=review.rating%>  stars
        </p>
       <h6 class="card-subtitle mb-2 text-muted">By- <%=review.author.username %> </h6>
        <p class="card-text"> Review: <%=review.body %></p>
        <% if(currentUser && review.author.equals(currentUser._id)) {%> 
        <form action="/campgrounds/<%=campground._id%>/reviews/<%=review._id%>?_method=DELETE" method="POST">
          <button class="btn btn-sm btn-danger">Delete</button>
        </form>
      <% } %> 
      </div>
      </div>
      <% } %> 
    </div>
</div>

<script>

  mapboxgl.accessToken='<%-process.env.MAPBOX_TOKEN%>';
  const campground= `<%- campground.geometry.coordinates %>`.split(',');
  
  const map = new mapboxgl.Map({
  container: 'map', // container ID
  style: 'mapbox://styles/mapbox/light-v11', // style URL
  center: campground, // starting position [lng, lat]
  zoom: 10, // starting zoom
  projection: 'globe' // display the map as a 3D globe
  });
  map.on('style.load', () => {
  map.setFog({}); // Set the default atmosphere style
  });
  
map.addControl(new mapboxgl.NavigationControl());
  new mapboxgl.Marker()
    .setLngLat(campground)
    .addTo(map);
    
    </script>
    